{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["Page","styled","div","props","theme","colors","primaryLight","Title","primaryDark","fontSize","large","MessageForm","form","MessageTextArea","textarea","borderRadius","medium","SubmitButton","button","MessageList","MessageContainer","MessageHeader","MessageAuthor","MessageTime","primary","small","MessageBody","DeleteButton","Message","author","time","children","handleDelete","id","onClick","propsTypes","PropTypes","string","node","ErrorMessage","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessage","fetch","then","res","json","data","catch","err","message","useEffect","method","console","log","onSubmit","e","preventDefault","headers","body","JSON","stringify","nickname","ok","rows","onChange","target","onFocus","toString","length","map","Date","createdAt","toLocaleString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a632da4a.chunk.js","sourcesContent":["import './App.css';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst API_MESSAGES = 'https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc';\n\nconst Page = styled.div`\n  width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: ${(props) => props.theme.colors.primaryLight};\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-size: ${(props) => props.theme.fontSize.large};\n  font-weight: bold;\n`\n\nconst MessageForm = styled.form``\n\nconst MessageTextArea = styled.textarea`\n  box-sizing: border-box;\n  margin: 10px 0;\n  padding: 5px;\n  border: 1px solid ${(props) => props.theme.colors.primaryDark};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst SubmitButton = styled.button`\n  padding: 5px;\n  width: 100%;\n  text-align: center;\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  background-color: ${(props) => props.theme.colors.primaryDark};\n  color: ${(props) => props.theme.colors.primaryLight};\n\n  &:hover, &:focus {\n    outline: none;\n    box-shadow: 1px 1px 2px 1px gray;\n    cursor: pointer;\n  }\n`\n\nconst MessageList = styled.div``\n\nconst MessageContainer = styled.div`\n  margin-top: 20px;\n  padding: 10px;\n  border: 1px solid ${(props) => props.theme.colors.primaryDark};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  background-color: white;\n`\n\nconst MessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  line-height: 18px;\n`\n\nconst MessageAuthor = styled.div`\n  color: ${(props) => props.theme.colors.primaryDark};\n  word-break: break-all;\n  font-size: ${(props) => props.theme.fontSize.medium};\n`\n\nconst MessageTime = styled.div`\n  flex: 1;\n  text-align: right;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: ${(props) => props.theme.fontSize.small};\n`\n\nconst MessageBody = styled.div`\n  padding: 5px;\n  border-top: 1px solid ${(props) => props.theme.colors.primaryDark};\n  word-break: break-all;\n  font-size: ${(props) => props.theme.fontSize.medium};\n  color: ${(props) => props.theme.colors.primaryDark};\n`\n\nconst DeleteButton = styled.button`\n  background-color: wheat;\n`\n\nfunction Message({ author, time, children, handleDelete, id }) {\n  // console.log('id: ', id)\n  return (\n    <MessageContainer>\n      <MessageHeader>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHeader>\n      <MessageBody>\n        {children}\n      </MessageBody>\n      <DeleteButton onClick={() => handleDelete(id)} >刪除</DeleteButton>\n    </MessageContainer>\n  )\n}\n\nMessage.propsTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n}\n\nconst ErrorMessage = styled.div`\n  margin-top: 10px;\n  color: red;\n`\n\nfunction App() {\n  const [messages, setMessages] = useState(null)\n  const [messageApiError, setMessageApiError] = useState(null)\n  const [value, setValue] = useState('')\n  const [postMessageError, setPostMessageError] = useState()\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false)\n\n  const fetchMessage = () => {\n    return fetch(API_MESSAGES).then((res) => res.json())\n      .then((data) => {\n        setMessages(data)\n      })\n      .catch(err => {\n        setMessageApiError(err.message)\n      })\n  }\n\n  useEffect(() => {\n    fetchMessage()\n  }, [])\n\n  const handleTextAreaChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingPostMessage) {\n      return\n    }\n    setIsLoadingPostMessage(true)\n    fetch('https://student-json-api.lidemy.me/comments', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: 'hello',\n        body: value\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      setIsLoadingPostMessage(false)\n      if (data.ok === 0) {\n        setPostMessageError(data.message)\n        return\n      }\n      fetchMessage()\n      setValue('')\n    })\n    .catch(err => {\n      setIsLoadingPostMessage(false)\n      setPostMessageError(err.message)\n    })\n  }\n\n\n  const handleDelete = (id) => {\n    fetch(`https://student-json-api.lidemy.me/comments/${id}`, {\n      method: 'DELETE',\n      })\n      .then(res => res.json())\n      .then(data => {\n        fetchMessage()\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleTextAreaFocus = () => {\n    setPostMessageError(null)\n  }\n\n  return (\n    <Page>\n      <Title>留言版</Title>\n      <MessageForm onSubmit={handleFormSubmit} >\n        <MessageTextArea rows=\"10\" value={value} onChange={handleTextAreaChange} onFocus={handleTextAreaFocus} />\n        <SubmitButton>送出留言</SubmitButton>\n        { postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage> }\n      </MessageForm>\n      { messageApiError && <ErrorMessage>Something went wrong. {messageApiError.toString()}.</ErrorMessage> }\n      { messages && messages.length === 0 && <ErrorMessage>No Message.</ErrorMessage> }\n      <MessageList>\n        {\n          messages && messages.map((message) => {\n            return (\n              <Message key={message.id} id={message.id} author={message.nickname} time={new Date(message.createdAt).toLocaleString()} children={message.body} handleDelete={handleDelete} />\n            )\n          })\n        }\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primaryLight: \"#d0e6da\",\n    primary: \"#338d11\",\n    primaryDark: \"#005238\",\n  },\n  fontSize: {\n    large: \"24px\",\n    medium: \"18px\",\n    small: \"14px\",\n  },\n  borderRadius: {\n    medium: \"10px\",\n  }\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}